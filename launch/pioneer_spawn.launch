<launch>

  <arg name="mav_name"       default="slammer"/>
  <!--<arg name="world_file"     default="willowgarage.world"/>-->
  <!--<arg name="world_file"     default="willowgarage_detail3.world"/>-->
  <!--<arg name="world_file"     default="detail_world.world"/>-->
  <arg name="world_file"     default="custom_world.world"/>
  <arg name="x"              default="0.0"/>
  <arg name="y"              default="0.0"/>
  <arg name="z"              default="0.08"/>
  <arg name="yaw"            default="0.0"/> 
  <arg name="debug"          default="false"/>

  <!-- Simulator -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find mapping_3d)/worlds/$(arg world_file)"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="true"/>
  </include>

  <include file="$(find rosflight_sim)/launch/spawn_mav.launch">
    <arg name="mav_name"            value="$(arg mav_name)" />
    <arg name="model"               value="$(find mapping_3d)/agents/$(arg mav_name)/$(arg mav_name).xacro" />
    <arg name="enable_ground_truth" value="true" />
    <arg name="z"                   value="$(arg z)"/>
    <arg name="y"                   value="$(arg y)"/>
    <arg name="x"                   value="$(arg x)"/>
    <arg name="yaw"                 value="$(arg yaw)"/>
  </include>
 
  <!-- Controller -->
  <group ns="$(arg mav_name)">

    <!-- Load common parameters -->
    <rosparam command="load" file="$(find mapping_3d)/agents/$(arg mav_name)/$(arg mav_name).yaml"/>

    <!-- Is Flying Publisher -->
    <node pkg="rostopic" type="rostopic" name="is_flying_pub" args="pub is_flying std_msgs/Bool true"/>

    <!-- Status Publisher -->
    <node pkg="rostopic" type="rostopic" name="status_pub" args="pub -r 1 status rosflight_msgs/Status '{armed: true, failsafe: false, rc_override: false, offboard: true, error_code: 0, num_errors: 0, loop_time_us: 1}'"/>

    <!-- State Estimator -->
    <!-- <node pkg="roscopter" type="mekf" name="mekf" output="screen">
      <remap from="baro" to="baro/data"/>
      <remap from="sonar" to="sonar/data"/>
      <remap from="magnetometer" to="mag/data"/>
    </node> -->

    <!-- PID Position Controller -->
    <node name="controller" pkg="roscopter" type="controller">
      <remap from="estimate" to="ground_truth/odometry/NED"/>
      <!-- <remap from="estimate" to="estimate"/> -->
    </node>

    <!-- Waypoint Manager -->
    <node name="waypoint_manager" pkg="mapping_3d" type="waypoint_manager.py" output="screen">
      <remap from="waypoint" to="high_level_command"/>
      <remap from="state" to="ground_truth/odometry/NED"/>
      <!-- <remap from="state" to="estimate"/> -->
    </node>

    <!--[> plot states <]-->
    <!--<node pkg="ekf_slam" type="states_plotter.py" name="states_plotter" output="screen">-->
      <!--<param name="time_window" value="10.0"/>-->
    <!--</node>-->

    <!-- My estimator -->
    <!-- <node pkg="ekf_slam" type="ekf_slam2D.py" name="estimator_slam"/> -->

  </group>
  <node name="camera_base_tf" pkg="tf" type="static_transform_publisher" args="0 0 0 0.5 -0.5 0.5 -0.5 camera_link camera_base_link 100"/>
  
  <node name="laser_base_tf" pkg="tf" type="static_transform_publisher" args="0 0 0.1 0 0 0 1 camera_link slammer/slammer/base_laser_link 100"/>
</launch>
