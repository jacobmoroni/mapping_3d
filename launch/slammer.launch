<launch>

  <arg name="name"/>
  <arg name="vehicle"       default="slammer"/>
  <arg name="base_station"  default="ultron"/>

  <arg name="run_rgbd"      default="true"/>
  <arg name="run_demo"      default="false"/>
  <arg name="run_laser"     default="true"/>
  <arg name="run_gps"       default="true"/>
  <arg name="run_mapping"   default="true"/>

  <arg name="vo_source"     default="rgbd"/>

  <arg name="obstacle_avoid" default="false"/>

  <arg name="visualization" default="false"/>
  <arg name="tuning"        default="false"/>
  <arg name="truth"         default="false"/>
  <arg name="bag_prefix"    default="leo"/>
  <arg name="debug"         default="false"/>

  <arg name="remote_ws"     default="slammer_ws"/>

  <machine name="casey"    address="casey"    user="casey"    env-loader="/opt/ros/kinetic/rel_nav_env.sh"/>
  <machine name="splinter" address="splinter" user="splinter" env-loader="/opt/ros/kinetic/rel_nav_env.sh"/>
  <machine name="ultron"   address="ultron"   user="ultron"   env-loader="/opt/ros/kinetic/rel_nav_env.sh"/>

  <node name="base_tf" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 1 camera_link base_link 100"/>
    <!--<node name="map" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 1 base_link map 100"/>-->
    <!-- -->
  <!--<node name="obstacle_avoidance" pkg="obstacle_avoidance" type="obstacle_avoidance"/>-->

    <!--Launch Realsense and RTAB Map-->
  <include file="$(find mapping_3d)/launch/slammer_rtab.launch"/>
  <node name="path_planner" pkg="mapping_3d" type="pygame_path_planner.py" output="screen"/>
  <node name="obstacle_detection" pkg="mapping_3d" type="obstacle_detect.py" output="screen"/>
    <!-- VO -->
    <!-- <group if="$(arg run_rgbd)">
      <include file="$(find relative_nav)/launch/rgbd.launch"/>
      <include file="$(find demo_rgbd)/demo_rgbd.launch"/>
      <node name="vo_relay" pkg="vo_relay" type="vo_relay_node">
        <remap from="global_vo" to="cam_to_init"/>
      </node>
    </group> -->

    <!--Estimation-->
    <!--<node name="start_trigger" pkg="rmekf" type="start_trigger.py"/>-->
    <!--<node name="rmekf"         pkg="rmekf" type="rmekf_node" output="screen">-->
    <!--<rosparam command="load" file="$(find rmekf)/params/estimator.yaml"/>-->
    <!--<remap from="altimeter" to="sonar"/>-->
    <!--</node>-->

    <!-- Velocity Command -->
    <!--<node name="velocity_command_joy" pkg="rosflight_joy" type="velocity_command_joy">-->
    <!--<remap from="velocity_command" to="high_level_command"/>-->
    <!--</node>-->

   <!-- MoCap -->
   <!--<node name="mocap" pkg="vrpn_client_ros" type="vrpn_client_node">-->
   <!--<param name="server" value="192.168.0.103"/>-->
   <!--<param name="refresh_tracker_frequency" value="10"/>-->
   <!--</node>-->
   <!--<node name="mocap_NED_transform" pkg="vrpn_transform" type="vrpn_transform_node"/>-->

    <!--Record-->
     <!--<node name ="record" pkg="rosbag" type ="record" args="-O $(arg name) camera/aligned_depth_to_color/image_raw/compressedDepth camera/color/image_rect_color/compressed camera/color/camera_info camera/depth/camera_info /tf /tf_static" output="screen"/>-->
  
     <!--<node name ="record" pkg="rosbag" type ="record" args="-O $(arg name) /rtabmap/odom" output="screen"/>-->
  </launch>
